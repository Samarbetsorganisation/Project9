name: cicd

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CONTAINER_IMAGE: ghcr.io/samarbetsorganisation/project9:latest
  RESOURCE_GROUP: MerchStoreRG
  CONTAINER_APP_NAME: merchstore

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build ./src -t $CONTAINER_IMAGE
          docker push $CONTAINER_IMAGE

  deploy_to_vm:
    needs: build_and_push
    runs-on: ubuntu-latest
    env:
      APIKEY__VALUE: ${{ secrets.APIKEY__VALUE }}
      SQLDB__CONNECTIONSTRING: ${{ secrets.SQLDB__CONNECTIONSTRING }}
      BLOBCONNECTIONSTRING: ${{ secrets.BLOBCONNECTIONSTRING }}
      BLOBCONTAINERNAME: ${{ secrets.BLOBCONTAINERNAME }}
      REVIEWSERVICE__APIKEY: ${{ secrets.REVIEWSERVICE__APIKEY }}
      REVIEWSERVICE__USERNAME: ${{ secrets.REVIEWSERVICE__USERNAME }}
      REVIEWSERVICE__PASSWORD: ${{ secrets.REVIEWSERVICE__PASSWORD }}
      REVIEWSERVICE__BASEURL: ${{ secrets.REVIEWSERVICE__BASEURL }}
    steps:
      - name: Stop and remove existing container
        run: sudo docker stop $CONTAINER_APP_NAME || true && sudo docker rm $CONTAINER_APP_NAME || true

      - name: Start the new container
        run: |
          sudo docker run -d -p 80:8080 --name $CONTAINER_APP_NAME \
            -e APIKEY__VALUE="$APIKEY__VALUE" \
            -e SQLDB__CONNECTIONSTRING="$SQLDB__CONNECTIONSTRING" \
            -e BLOBCONNECTIONSTRING="$BLOBCONNECTIONSTRING" \
            -e BLOBCONTAINERNAME="$BLOBCONTAINERNAME" \
            -e REVIEWSERVICE__APIKEY="$REVIEWSERVICE__APIKEY" \
            -e REVIEWSERVICE__USERNAME="$REVIEWSERVICE__USERNAME" \
            -e REVIEWSERVICE__PASSWORD="$REVIEWSERVICE__PASSWORD" \
            -e REVIEWSERVICE__BASEURL="$REVIEWSERVICE__BASEURL" \
            $CONTAINER_IMAGE

  deploy_to_azure_container_apps:
    needs: build_and_push
    runs-on: ubuntu-latest
    env:
      APIKEY__VALUE: ${{ secrets.APIKEY__VALUE }}
      SQLDB__CONNECTIONSTRING: ${{ secrets.SQLDB__CONNECTIONSTRING }}
      BLOBCONNECTIONSTRING: ${{ secrets.BLOBCONNECTIONSTRING }}
      BLOBCONTAINERNAME: ${{ secrets.BLOBCONTAINERNAME }}
      REVIEWSERVICE__APIKEY: ${{ secrets.REVIEWSERVICE__APIKEY }}
      REVIEWSERVICE__USERNAME: ${{ secrets.REVIEWSERVICE__USERNAME }}
      REVIEWSERVICE__PASSWORD: ${{ secrets.REVIEWSERVICE__PASSWORD }}
      REVIEWSERVICE__BASEURL: ${{ secrets.REVIEWSERVICE__BASEURL }}
    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name $CONTAINER_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --image $CONTAINER_IMAGE \
            --revision-suffix $(date +%s) \
            --set-env-vars APIKEY__VALUE="$APIKEY__VALUE" SQLDB__CONNECTIONSTRING="$SQLDB__CONNECTIONSTRING" BLOBCONNECTIONSTRING="$BLOBCONNECTIONSTRING" BLOBCONTAINERNAME="$BLOBCONTAINERNAME" REVIEWSERVICE__APIKEY="$REVIEWSERVICE__APIKEY" REVIEWSERVICE__USERNAME="$REVIEWSERVICE__USERNAME" REVIEWSERVICE__PASSWORD="$REVIEWSERVICE__PASSWORD" REVIEWSERVICE__BASEURL="$REVIEWSERVICE__BASEURL"